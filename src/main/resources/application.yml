server:
  port: 80

spring:
  main:
    web-application-type: reactive
  application:
    name: gateway-service
  cloud:
    gateway:
      globalcors:
        default-filters:
          - DedupeResponseHeader=Access-Control-Allow-Origin Access-Control-Allow-Credentials, RETAIN_UNIQUE
#        cors-configurations:
#          '[/**]':
#            allowedOrigins:
#              - 'http://localhost:3000'
#              # - ${FRONTEND_HOST}
#            allow-credentials: true
#            allowedHeaders: '*'
#            allowedMethods:
#              - PUT
#              - GET
#              - POST
#              - DELETE
#              - OPTIONS
      routes:
        - id: user-service
          uri: lb://USER-SERVICE
          predicates:
            - Path=/user-service/**
          filters:
            - RewritePath=/user-service/(?<segment>.*), /$\{segment}


        - id: filter-service
          uri: lb://FILTER-SERVICE
          predicates:
            - Path=/filter-service/**
          filters:
            - RewritePath=/filter-service/(?<segment>.*), /$\{segment}
            - AuthorizationHeaderFilter
            - name: Cors
              args:
                allowedOrigins: "http://localhost:3000"
                allowCredentials: true
                allowedHeaders: "*"
                allowedMethods: "PUT, GET, POST, DELETE, OPTIONS"

        - id: exhibition-service
          uri: lb://EXHIBITION-SERVICE
          predicates:
            - Path=/exhibition-service/**
          filters:
            - RewritePath=/exhibition-service/(?<segment>.*), /$\{segment}
            - AuthorizationHeaderFilter
            - name: Cors
              args:
                allowedOrigins: "http://localhost:3000"
                allowCredentials: true
                allowedHeaders: "*"
                allowedMethods: "PUT, GET, POST, DELETE, OPTIONS"

        - id: report-service
          uri: lb://REPORT-SERVICE
          predicates:
            - Path=/report-service/**
          filters:
            - RewritePath=/report-service/(?<segment>.*), /$\{segment}
            - AuthorizationHeaderFilter
            - name: Cors
              args:
                allowedOrigins: "http://localhost:3000"
                allowCredentials: true
                allowedHeaders: "*"
                allowedMethods: "PUT, GET, POST, DELETE, OPTIONS"
eureka:
  client:
    service-url:
      defaultZone: http://${EUREKA_HOST}:8761/eureka/
    register-with-eureka: true
    fetch-registry: true
  instance:
    instance-id: ${spring.application.name}:${spring.application.instance_id:${random.value}}
    hostname: ${INSTANCE_HOST} # 지금은 instance public dns임

management:
  endpoint:
    web:
      exposure:
        include: "*"

jwt:
  secret: ${JWT_SECRET}